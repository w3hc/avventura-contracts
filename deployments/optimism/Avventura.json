{
  "address": "0x595AB9ACe017d77960EEae61d29B3d44bCF53f17",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousStep",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStep",
          "type": "uint256"
        }
      ],
      "name": "Moved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gameID",
          "type": "uint256"
        }
      ],
      "name": "createGame",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentStep",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gameID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_nextStep",
          "type": "uint256"
        }
      ],
      "name": "move",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6867e56df78e865c63aad3045a1d62499c0fc97bc2337b5894a6fb74e787a259",
  "receipt": {
    "to": null,
    "from": "0x27292E1a901E3E0bE7d144aDba4CAD07da2d8a42",
    "contractAddress": "0x595AB9ACe017d77960EEae61d29B3d44bCF53f17",
    "transactionIndex": 17,
    "gasUsed": "271751",
    "logsBloom": "0x00000000008000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000020000000000000800000000000000000000000100000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000040000000004000",
    "blockHash": "0x642871c37ab1ee7b21f2f15bbc8291229b3b0ca744eba6d6a0eba73ec1e7d989",
    "transactionHash": "0x6867e56df78e865c63aad3045a1d62499c0fc97bc2337b5894a6fb74e787a259",
    "logs": [
      {
        "transactionIndex": 17,
        "blockNumber": 125967874,
        "transactionHash": "0x6867e56df78e865c63aad3045a1d62499c0fc97bc2337b5894a6fb74e787a259",
        "address": "0x595AB9ACe017d77960EEae61d29B3d44bCF53f17",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000027292e1a901e3e0be7d144adba4cad07da2d8a42"
        ],
        "data": "0x",
        "logIndex": 55,
        "blockHash": "0x642871c37ab1ee7b21f2f15bbc8291229b3b0ca744eba6d6a0eba73ec1e7d989"
      }
    ],
    "blockNumber": 125967874,
    "cumulativeGasUsed": "4898904",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a917d8053b1d44e8bb9bba6c6a7cf666",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousStep\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStep\",\"type\":\"uint256\"}],\"name\":\"Moved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameID\",\"type\":\"uint256\"}],\"name\":\"createGame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStep\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nextStep\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Avventura.sol\":\"Avventura\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/Avventura.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Avventura is Ownable {\\n    struct Game {\\n        uint id;\\n        uint currentStep;\\n    }\\n\\n    mapping(uint => Game) public games;\\n\\n    event Moved(uint indexed gameID, uint previousStep, uint newStep);\\n\\n    constructor() Ownable(msg.sender) {}\\n\\n    function createGame(uint _gameID) public onlyOwner returns (bool) {\\n        games[_gameID] = Game(_gameID, 0);\\n        return true;\\n    }\\n\\n    function move(uint _gameID, uint _nextStep) public onlyOwner {\\n        require(games[_gameID].id == _gameID, \\\"Game does not exist\\\");\\n        uint previousStep = games[_gameID].currentStep;\\n        games[_gameID].currentStep = _nextStep;\\n        emit Moved(_gameID, previousStep, _nextStep);\\n    }\\n}\\n\",\"keccak256\":\"0xa14ab2eb041aa42b6b6cf28f5c9782af6ce205cf44805c75131787932a87caf5\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61037c806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630867408f14610067578063117a5b901461007c57806348e837b9146100bd578063715018a6146100e05780638da5cb5b146100e8578063f2fde38b14610103575b600080fd5b61007a6100753660046102db565b610116565b005b6100a361008a3660046102fd565b6001602081905260009182526040909120805491015482565b604080519283526020830191909152015b60405180910390f35b6100d06100cb3660046102fd565b6101cf565b60405190151581526020016100b4565b61007a61020c565b6000546040516001600160a01b0390911681526020016100b4565b61007a610111366004610316565b610220565b61011e61025e565b60008281526001602052604090205482146101765760405162461bcd60e51b815260206004820152601360248201527211d85b5948191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064015b60405180910390fd5b60008281526001602081815260409283902090910180549084905582518181529182018490529184917fce3d3fafbbd45785e532e48d0aab11c79b02c84a8d4dd49e8ea96fdc320c0d71910160405180910390a2505050565b60006101d961025e565b50604080518082018252828152600060208083018281528583526001918290529390912091518255915190820155919050565b61021461025e565b61021e600061028b565b565b61022861025e565b6001600160a01b03811661025257604051631e4fbdf760e01b81526000600482015260240161016d565b61025b8161028b565b50565b6000546001600160a01b0316331461021e5760405163118cdaa760e01b815233600482015260240161016d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156102ee57600080fd5b50508035926020909101359150565b60006020828403121561030f57600080fd5b5035919050565b60006020828403121561032857600080fd5b81356001600160a01b038116811461033f57600080fd5b939250505056fea26469706673582212205bff88ba46979a505f46fa1b6cf4e9677d42583928d911e27b69de10be155dc764736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630867408f14610067578063117a5b901461007c57806348e837b9146100bd578063715018a6146100e05780638da5cb5b146100e8578063f2fde38b14610103575b600080fd5b61007a6100753660046102db565b610116565b005b6100a361008a3660046102fd565b6001602081905260009182526040909120805491015482565b604080519283526020830191909152015b60405180910390f35b6100d06100cb3660046102fd565b6101cf565b60405190151581526020016100b4565b61007a61020c565b6000546040516001600160a01b0390911681526020016100b4565b61007a610111366004610316565b610220565b61011e61025e565b60008281526001602052604090205482146101765760405162461bcd60e51b815260206004820152601360248201527211d85b5948191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064015b60405180910390fd5b60008281526001602081815260409283902090910180549084905582518181529182018490529184917fce3d3fafbbd45785e532e48d0aab11c79b02c84a8d4dd49e8ea96fdc320c0d71910160405180910390a2505050565b60006101d961025e565b50604080518082018252828152600060208083018281528583526001918290529390912091518255915190820155919050565b61021461025e565b61021e600061028b565b565b61022861025e565b6001600160a01b03811661025257604051631e4fbdf760e01b81526000600482015260240161016d565b61025b8161028b565b50565b6000546001600160a01b0316331461021e5760405163118cdaa760e01b815233600482015260240161016d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156102ee57600080fd5b50508035926020909101359150565b60006020828403121561030f57600080fd5b5035919050565b60006020828403121561032857600080fd5b81356001600160a01b038116811461033f57600080fd5b939250505056fea26469706673582212205bff88ba46979a505f46fa1b6cf4e9677d42583928d911e27b69de10be155dc764736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Avventura.sol:Avventura",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 192,
        "contract": "contracts/Avventura.sol:Avventura",
        "label": "games",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Game)187_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(Game)187_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Avventura.Game)",
        "numberOfBytes": "32",
        "value": "t_struct(Game)187_storage"
      },
      "t_struct(Game)187_storage": {
        "encoding": "inplace",
        "label": "struct Avventura.Game",
        "members": [
          {
            "astId": 184,
            "contract": "contracts/Avventura.sol:Avventura",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 186,
            "contract": "contracts/Avventura.sol:Avventura",
            "label": "currentStep",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}